#include <vector>
#include <iostream>
#include <cstdlib>
#include <conio.h>
 
using namespace std;
 
vector<int> d (100);
vector<bool> u (100);
vector < vector<int> > g (100, vector<int> (100));
int n, m, s, f;
 
void deikstra(int s, int f) {
 
    for (int i = 0; i < 100; i++) {
        u[i] = false;
        d[i] = 1111111;
    }
 
    d[s] = 0;
    for (int i = 1; i < n + 1; i++) {
        int v = -1;
        for (int j = 1 ; j < n + 1; j++)
            if (!u[j] && (v == -1 || d[j] < d[v]))
                v = j;
        if (d[v] == 1111111)
            break;
        u[v] = true;
 
        for (int j = 1; j < n + 1; j++) {
            int len = g[v][j];
            if (d[v] + len < d[j]) {
                d[j] = d[v] + len;
            }
        }
   
    }
   
    cout << "Distance to all vertexes from vertex S: " << endl;
    for (int i = 1; i < n + 1; i++) {
        cout << d[i] << " ";
    }
   
    cout << endl << "Distance to finish vertex: " << d[f] << endl;
}
 
 
int main()
{
    cout << "Enter the number of vertices and edges of the graph: ";
    cin >> n >> m;
    for (int i = 0; i < n + 1; i++) for (int j = 0; j < n + 1; j++) g[i][j] = 1111111;
    cout << "Enter graph info: " << endl;
    for(int i = 0; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        g[a][b] = c;
        g[b][a] = c;
    }
   
    while (true) {
        int variant;
        cout << "------" << endl;
        cout << "Menu: " << endl;
        cout << "1. Enter start and finish vertex numbers" << endl;
        cout << "2. Deikstra run" << endl;
        cout << "3. Exit" << endl;
        cout << "Your choise: ";
        cin >> variant;
        switch (variant)
        {
            case 1:
            {
                cout << "Enter start and finish edge numbers: ";
                cin >> s >> f;
                break;
            }
            case 2:
            {
                deikstra(s, f);
                break;
            }
       
            case 3:
            {
                return 0;
                break;
            }
        }
    }
    return 0;
}
